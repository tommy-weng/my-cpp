#include <iostream>
#include <array>

using std::cout;
using std::endl;

/*
    case 1:
    -------------------------
    |     |  i  |  w  |  v  |
    -------------------------
    |     |  0  |  0  |  0  |
    -------------------------
    |  a  |  1  |  1  |  2  |
    -------------------------
    |  b  |  2  |  2  |  3  |
    -------------------------
    |  c  |  3  |  3  |  4  |
    -------------------------
    |  d  |  4  |  4  |  5  |
    -------------------------

    -------------------------------------------------------------
    |     |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |
    -------------------------------------------------------------
          |  0  |  0  |  0  |  0  |  0  |  0  |  0  |  0  |  0  |
    -------------------------------------------------------------  
    |  a  |  0  |  2  |  2  |  2  |  2  |  2  |  2  |  2  |  2  |
    -------------------------------------------------------------
    |  b  |  0  |  2  |  3  |  5  |  5  |  5  |  5  |  5  |  5  |
    -------------------------------------------------------------
    |  c  |  0  |  2  |  3  |  5  |  6  |  7  |  9  |  9  |  9  |
    -------------------------------------------------------------
    |  d  |  0  |  2  |  3  |  5  |  6  |  7  |  9  |  10 |  11 |
    -------------------------------------------------------------


    case 2:
    -------------------------
    |     |  i  |  w  |  v  |
    -------------------------
    |     |  0  |  0  |  0  |
    -------------------------
    |  a  |  1  |  2  |  3  |
    -------------------------
    |  b  |  2  |  3  |  4  |
    -------------------------
    |  c  |  3  |  4  |  5  |
    -------------------------
    |  d  |  4  |  5  |  6  |
    -------------------------

    -------------------------------------------------------------
    |     |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |
    -------------------------------------------------------------
          |  0  |  0  |  0  |  0  |  0  |  0  |  0  |  0  |  0  |
    -------------------------------------------------------------  
    |  a  |  0  |  0  |  3  |  3  |  3  |  3  |  3  |  3  |  3  |
    -------------------------------------------------------------
    |  b  |  0  |  0  |  3  |  4  |  4  |  7  |  7  |  7  |  7  |
    -------------------------------------------------------------
    |  c  |  0  |  0  |  3  |  4  |  5  |  7  |  8  |  9  |  9  |
    -------------------------------------------------------------
    |  d  |  0  |  0  |  3  |  4  |  5  |  7  |  8  |  9  |  10 |
    -------------------------------------------------------------


    formula:
    dp[i][j] = max(dp[i-1][j], dp[i-1][j-w[i]] + v[i])
              */

template <size_t row, size_t column>
class Dp
{
public:
    Dp()
    {
        for (int i = 1; i <= row; i++)
        {
            w[i] = i + 1; // i;
            v[i] = i + 2; // i + 1;
        }
    }

    int fill()
    {
        for (int i = 1; i <= row; i++)
        {
            for (int j = 1; j <= column; j++)
            {
                if (j >= w[i])
                {
                    dp[i][j] = std::max(dp[i-1][j], dp[i-1][j-w[i]] + v[i]);
                }
                else
                {
                    dp[i][j] = dp[i-1][j];
                }
            }
        }

        return dp[row][column];
    }

    void show()
    {
        for (auto v: dp)
        {
            for (auto i : v)
            {
                cout << i << " ";
            }
            cout << endl;
        }
    }

private:
    std::array<std::array<int, column + 1>, row + 1> dp{};
    std::array<int, row + 1> w{};
    std::array<int, row + 1> v{};
};

int main()
{
    Dp<4,8> dp{};
    
    dp.show();
    cout << dp.fill() << endl;
    dp.show();

    return 0;
}   

